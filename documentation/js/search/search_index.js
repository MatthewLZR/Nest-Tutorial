var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.404,1,1.614]],["body/controllers/AppController.html",[0,2.218,1,2.55,2,1.557,3,0.586,4,0.492,5,0.492,6,2.825,7,0.586,8,1.942,9,4.021,10,1.778,11,0.05,12,0.92,13,3.503,14,1.557,15,1.313,16,0.859,17,1.053,18,2.116,19,2.825,20,0.586,21,0.098,22,2.825,23,2.045,24,1.557,25,3.503,26,0.04,27,0.04]],["title/modules/AppModule.html",[28,1.229,29,1.614]],["body/modules/AppModule.html",[1,2.307,2,1.515,3,0.662,4,0.339,5,0.339,11,0.051,16,0.987,17,0.725,18,2.09,19,1.945,20,0.404,21,0.068,26,0.031,27,0.031,28,1.515,29,2.882,30,1.072,31,1.515,32,1.945,33,1.945,34,1.945,35,2.388,36,1.989,37,1.408,38,1.408,39,2.412,40,2.314,41,2.314,42,2.412,43,2.412,44,1.945,45,1.225,46,1.225,47,2.412,48,2.412,49,1.408,50,2.683,51,3.408,52,2.412,53,2.412,54,2.412,55,3.654,56,3.408,57,2.412,58,2.412,59,2.412,60,2.412,61,2.412,62,2.412,63,2.412,64,2.412,65,1.945,66,2.412,67,2.412,68,2.412,69,2.181,70,3.952,71,3.952,72,3.952,73,2.412,74,3.952,75,2.412,76,3.408,77,2.412,78,2.412,79,1.945,80,2.412,81,2.412,82,2.412]],["title/injectables/AppService.html",[18,1.229,83,1.079]],["body/injectables/AppService.html",[3,0.614,4,0.515,5,0.515,7,0.614,8,1.999,9,4.087,11,0.05,12,0.964,14,1.631,15,1.352,16,0.722,17,1.103,18,1.999,20,0.614,21,0.103,24,1.631,26,0.041,27,0.041,83,1.755,84,2.142,85,2.96,86,3.67,87,3.67,88,3.67]],["title/modules/AuthModule.html",[28,1.229,89,1.404]],["body/modules/AuthModule.html",[2,1.46,3,0.55,4,0.461,5,0.461,11,0.05,16,0.909,17,0.987,20,0.55,21,0.092,26,0.038,27,0.038,28,1.864,30,1.46,31,1.864,36,2.449,37,1.917,38,1.917,40,2.849,41,2.23,89,2.613,90,2.649,91,2.649,92,2.613,93,3.285,94,4.196,95,1.917,96,3.285,97,3.285,98,3.285,99,2.23,100,3.285,101,2.649,102,3.285,103,3.285,104,3.285]],["title/classes/Book.html",[21,0.078,105,0.948]],["body/classes/Book.html",[3,0.355,4,0.298,5,0.298,7,0.355,10,2.422,11,0.05,12,1.253,15,1.524,16,0.611,20,0.355,21,0.06,26,0.028,27,0.028,105,1.065,106,0.943,107,1.711,108,1.814,109,1.867,110,1.634,111,2.146,112,1.867,113,2.146,114,2.146,115,2.146,116,2.146,117,1.434,118,3.239,119,2.11,120,2.628,121,2.121,122,2.121,123,2.11,124,2.11,125,1.814,126,2.11,127,2.11,128,2.748,129,2.748,130,2.748,131,2.496,132,3.107,133,2.121,134,2.121,135,2.121,136,2.055,137,2.121,138,2.121,139,2.121,140,2.121,141,2.121,142,2.121,143,2.121,144,2.121,145,2.121,146,2.121,147,3.107,148,4.652,149,3.107,150,1.44,151,3.304,152,1.077,153,3.239,154,1.711,155,1.44,156,1.44,157,1.44,158,1.44,159,1.44]],["title/classes/Book-1.html",[21,0.065,105,0.796,160,2.322]],["body/classes/Book-1.html",[3,0.37,4,0.31,5,0.31,7,0.37,10,2.449,11,0.05,12,1.267,15,1.537,16,0.434,20,0.37,21,0.062,26,0.029,27,0.029,105,1.097,106,0.982,108,1.869,109,1.911,110,1.673,111,2.197,112,1.911,113,2.197,114,2.197,115,2.197,116,2.197,117,1.45,118,3.276,119,2.174,120,2.666,123,2.174,124,2.174,125,1.869,126,2.174,127,2.174,128,2.802,129,2.802,130,2.802,131,2.802,136,2.095,151,3.338,152,1.122,153,3.276,154,2.582,155,2.174,156,2.174,157,2.174,158,2.174,159,2.174,161,1.782,162,2.21,163,2.21,164,2.21,165,2.21,166,2.21,167,2.21,168,2.21,169,2.21]],["title/classes/BookDto.html",[21,0.078,170,1.404]],["body/classes/BookDto.html",[3,0.366,4,0.307,5,0.307,7,0.366,10,2.384,11,0.05,12,1.233,15,1.534,16,0.43,20,0.366,21,0.061,23,3.141,26,0.029,27,0.029,106,0.972,108,1.855,109,1.9,110,1.663,111,2.184,113,2.184,114,2.184,115,2.184,116,2.184,117,1.411,118,3.188,119,2.157,120,2.656,123,2.157,124,2.157,125,1.855,126,2.157,127,2.157,128,2.788,129,2.788,130,2.788,131,2.788,136,1.613,151,3.266,152,1.11,153,3.188,155,2.157,156,2.157,157,2.157,158,2.157,159,2.157,170,1.613,171,1.764,172,2.187,173,2.187,174,2.187,175,2.187,176,2.187,177,2.187,178,2.187]],["title/controllers/BooksController.html",[0,1.404,179,1.614]],["body/controllers/BooksController.html",[0,0.513,2,0.449,3,0.288,4,0.142,5,0.142,7,0.169,8,0.765,10,1.512,11,0.051,12,0.851,14,1.44,15,1.142,16,0.774,17,0.517,20,0.169,21,0.028,23,0.59,24,1.323,26,0.016,27,0.016,49,0.59,50,1.168,55,0.815,95,0.59,101,0.815,105,1.349,110,1.849,112,1.141,117,1.303,120,1.55,125,2.127,136,1.141,152,0.513,170,1.756,179,1.004,180,0.815,181,1.01,182,1.01,183,2.994,184,1.813,185,1.813,186,1.388,187,1.813,188,1.813,189,1.721,190,1.01,191,5.094,192,2.79,193,4.735,194,1.01,195,1.721,196,3.643,197,1.01,198,2.141,199,3.643,200,4.41,201,1.721,202,1.01,203,1.721,204,1.721,205,1.01,206,1.892,207,1.892,208,1.892,209,2.673,210,1.01,211,3.065,212,1.01,213,1.721,214,2.248,215,2.655,216,1.721,217,1.01,218,1.01,219,1.01,220,1.721,221,2.655,222,1.01,223,2.248,224,1.01,225,1.01,226,1.01,227,1.721,228,1.721,229,1.721,230,1.01,231,1.01,232,1.01,233,1.721,234,1.721,235,1.01,236,1.721,237,3.937,238,1.01,239,3.459,240,1.01,241,1.01,242,2.978,243,1.721,244,2.248,245,1.01,246,1.01,247,1.01,248,1.01,249,0.999,250,0.815,251,0.815,252,0.815,253,3.241,254,3.459,255,1.01,256,1.01,257,0.686,258,1.01,259,1.01,260,2.248,261,0.686,262,1.01,263,1.01,264,1.01,265,1.01,266,0.815,267,0.59,268,1.168,269,1.01,270,2.978,271,3.241,272,3.937,273,1.01,274,3.241,275,4.594,276,2.401,277,1.01,278,2.978,279,2.655,280,4.41,281,2.978,282,1.01,283,2.248,284,2.248,285,1.01,286,2.248,287,2.248,288,2.248,289,1.01,290,1.01,291,1.01,292,1.01,293,1.01,294,0.815,295,1.01,296,1.01,297,1.721,298,1.721,299,1.01,300,1.01,301,1.01,302,1.01,303,1.01,304,1.01,305,1.01]],["title/modules/BooksModule.html",[28,1.229,35,1.404]],["body/modules/BooksModule.html",[2,1.797,3,0.52,4,0.436,5,0.436,11,0.051,16,0.997,17,0.933,20,0.52,21,0.087,26,0.037,27,0.037,28,1.797,30,1.379,31,1.797,35,2.658,36,2.361,37,1.812,38,1.812,40,2.746,41,2.746,44,2.503,45,1.576,89,2.51,105,1.064,179,2.627,249,2.253,250,2.503,257,2.107,306,2.503,307,2.503,308,3.104,309,3.104,310,3.104,311,3.104,312,3.104]],["title/injectables/BooksService.html",[83,1.079,249,1.229]],["body/injectables/BooksService.html",[3,0.35,4,0.293,5,0.293,7,0.35,8,1.366,11,0.051,12,1.176,14,1.903,15,1.457,16,0.842,17,0.628,20,0.35,21,0.059,24,1.903,26,0.028,27,0.028,45,1.061,83,1.199,84,1.22,105,0.716,112,1.56,117,1.287,150,1.419,170,2.35,183,3.433,184,2.478,185,2.478,186,2.478,187,2.478,188,2.478,192,3.454,206,2.614,207,2.614,208,2.614,209,3.347,211,3.241,249,1.366,252,1.685,257,1.419,261,1.419,267,1.794,268,1.419,276,3.241,313,1.685,314,2.09,315,3.241,316,2.09,317,3.073,318,3.073,319,2.09,320,3.073,321,2.09,322,3.073,323,2.09,324,2.09,325,3.073,326,2.09,327,3.073,328,2.09,329,1.685,330,2.09,331,2.09,332,2.09,333,2.09,334,2.09,335,2.09,336,2.09,337,2.09,338,2.09,339,2.09,340,2.09,341,2.09]],["title/classes/ConfigService.html",[21,0.078,46,1.404]],["body/classes/ConfigService.html",[3,0.389,4,0.326,5,0.326,7,0.389,8,1.476,11,0.051,12,1.11,14,1.721,15,1.518,16,0.457,20,0.389,21,0.065,22,1.876,24,1.721,26,0.03,27,0.03,45,1.181,46,2.145,65,3.407,69,1.686,79,1.876,106,1.034,117,1.397,198,1.876,206,2.261,207,2.261,208,2.261,267,1.358,268,2.63,342,1.579,343,4.647,344,3.321,345,4.225,346,3.321,347,2.326,348,3.321,349,2.326,350,3.321,351,3.321,352,2.326,353,2.326,354,2.326,355,3.874,356,3.321,357,4.225,358,2.326,359,1.876,360,3.407,361,2.326,362,2.326,363,2.326,364,3.321,365,2.326,366,1.876,367,2.326,368,2.326,369,2.326,370,2.326,371,2.326,372,1.876,373,2.326,374,2.326,375,2.326,376,2.326,377,2.326,378,2.326,379,2.326,380,2.326,381,2.326,382,2.326,383,2.326,384,2.326,385,2.326,386,1.876,387,1.876,388,1.876,389,1.876,390,1.876,391,1.876]],["title/injectables/JwtStrategy.html",[83,1.079,92,1.404]],["body/injectables/JwtStrategy.html",[3,0.514,4,0.431,5,0.431,7,0.514,8,1.785,11,0.051,12,1.055,14,1.364,16,0.88,17,0.923,20,0.514,21,0.086,24,1.364,26,0.037,27,0.037,69,1.558,83,1.567,84,1.792,92,2.039,95,1.792,99,2.084,117,0.923,183,3.039,206,1.792,207,1.792,208,1.792,209,2.727,261,2.084,266,2.476,267,2.613,329,2.476,366,2.476,392,2.476,393,4.016,394,3.07,395,4.016,396,3.07,397,4.476,398,3.07,399,3.07,400,3.07,401,2.476,402,3.07,403,3.07,404,3.07,405,3.07,406,3.07,407,3.07,408,3.07,409,3.07,410,3.07]],["title/classes/UpdateBookDto.html",[21,0.078,411,1.877]],["body/classes/UpdateBookDto.html",[3,0.463,4,0.388,5,0.388,7,0.463,11,0.049,12,1.341,15,1.599,20,0.463,21,0.078,23,3.241,26,0.034,27,0.034,106,1.23,108,2.188,109,2.158,110,1.889,111,2.481,112,2.158,113,2.481,114,2.481,115,2.481,116,2.481,117,1.535,136,2.313,411,2.545,412,2.232,413,2.768,414,2.768,415,2.768,416,2.768,417,2.768,418,2.768,419,2.768,420,2.768]],["title/coverage.html",[421,2.543]],["body/coverage.html",[0,2.034,1,1.785,5,0.429,6,2.467,11,0.05,18,1.359,21,0.138,26,0.037,27,0.037,46,2.034,69,1.553,83,1.743,85,2.467,92,1.553,105,1.373,107,2.467,117,0.919,161,2.467,170,1.553,171,2.467,179,1.785,180,2.467,249,1.359,294,4.356,313,2.467,342,2.72,392,2.467,411,2.077,412,2.467,421,2.077,422,3.059,423,3.059,424,3.059,425,4.007,426,4.468,427,4.007,428,3.059,429,3.059,430,4.007,431,3.059,432,2.467,433,3.059,434,2.467,435,3.059,436,3.059,437,3.059]],["title/dependencies.html",[31,1.474,438,2.322]],["body/dependencies.html",[11,0.051,17,0.976,26,0.038,27,0.038,31,1.443,45,1.648,49,1.895,50,2.828,95,1.895,99,2.204,150,2.204,152,1.648,251,3.359,372,2.618,401,3.359,439,4.85,440,3.247,441,3.247,442,3.247,443,3.247,444,3.247,445,3.247,446,3.247,447,3.247,448,3.247,449,3.247,450,3.247,451,3.247,452,3.247,453,3.247,454,3.247,455,3.247,456,3.247,457,3.247,458,3.247,459,3.247,460,3.247,461,3.247,462,3.247,463,3.247,464,3.247,465,3.247,466,3.247]],["title/miscellaneous/functions.html",[467,1.356,468,2.675]],["body/miscellaneous/functions.html",[7,0.696,11,0.044,26,0.044,27,0.044,432,3.353,434,4.136,467,2.427,468,3.353,469,4.158]],["title/index.html",[7,0.389,470,2.322,471,2.322]],["body/index.html",[4,0.413,11,0.05,26,0.036,27,0.036,49,2.558,109,1.493,110,1.307,315,2.372,421,1.997,472,2.942,473,2.942,474,3.905,475,2.942,476,2.942,477,2.942,478,2.942,479,2.942,480,2.942,481,2.942,482,2.942,483,2.942,484,5.097,485,2.942,486,2.942,487,2.942,488,4.995,489,2.942,490,2.942,491,3.905,492,2.942,493,2.942,494,2.942,495,2.942,496,3.905,497,3.905,498,2.942,499,2.942,500,2.942,501,3.905,502,3.905,503,2.942,504,2.942,505,2.942,506,2.942,507,2.942,508,2.372,509,2.942,510,2.942,511,2.942,512,2.942,513,2.942,514,2.942,515,2.942,516,2.942,517,2.942,518,2.942,519,2.942,520,2.942,521,2.942,522,2.942,523,2.942,524,2.942,525,2.942]],["title/modules.html",[30,1.665]],["body/modules.html",[11,0.043,26,0.043,27,0.043,29,2.335,30,1.778,35,2.031,89,2.031,508,4.07,526,5.047,527,5.047,528,5.047]],["title/overview.html",[529,3.021]],["body/overview.html",[2,1.507,11,0.048,18,2.085,26,0.039,27,0.039,29,3.029,30,1.507,31,1.902,32,2.734,33,2.734,34,2.734,35,2.675,36,2.499,37,1.979,38,1.979,84,1.979,89,2.58,90,2.734,91,2.734,92,2.382,106,1.507,249,2.085,306,2.734,307,2.734,529,2.734,530,4.281,531,3.39,532,3.39]],["title/miscellaneous/variables.html",[467,1.356,533,2.675]],["body/miscellaneous/variables.html",[7,0.663,11,0.047,26,0.043,27,0.043,46,2.391,69,2.012,342,2.691,359,3.196,360,3.196,386,3.196,387,3.196,388,3.196,389,3.196,390,3.196,391,3.196,467,2.313,533,3.196,534,3.963]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":294,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["0.1.13",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":160,"title":{"classes/Book-1.html":{}},"body":{}}],["1.3.1",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":531,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":215,"title":{},"body":{"controllers/BooksController.html":{}}}],["3",{"_index":530,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":203,"title":{},"body":{"controllers/BooksController.html":{}}}],["5",{"_index":532,"title":{},"body":{"overview.html":{}}}],["5.1.5",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["592",{"_index":158,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["592})@column",{"_index":141,"title":{},"body":{"classes/Book.html":{}}}],["7.2.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":154,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{}}}],["99})@primarygeneratedcolumn",{"_index":137,"title":{},"body":{"classes/Book.html":{}}}],["actualizado",{"_index":234,"title":{},"body":{"controllers/BooksController.html":{}}}],["actualizar",{"_index":233,"title":{},"body":{"controllers/BooksController.html":{}}}],["amazing",{"_index":509,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":256,"title":{},"body":{"controllers/BooksController.html":{}}}],["apibearerauth('access",{"_index":265,"title":{},"body":{"controllers/BooksController.html":{}}}],["apioperation",{"_index":253,"title":{},"body":{"controllers/BooksController.html":{}}}],["apiproperty",{"_index":151,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["apiproperty({example",{"_index":118,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["apiresponse",{"_index":254,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags",{"_index":255,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags('book",{"_index":262,"title":{},"body":{"controllers/BooksController.html":{}}}],["app",{"_index":486,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":480,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":183,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["authguard",{"_index":258,"title":{},"body":{"controllers/BooksController.html":{}}}],["authmodule",{"_index":89,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":109,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["await",{"_index":276,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["backers",{"_index":510,"title":{},"body":{"index.html":{}}}],["body",{"_index":244,"title":{},"body":{"controllers/BooksController.html":{}}}],["book",{"_index":105,"title":{"classes/Book.html":{},"classes/Book-1.html":{}},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["book.entity",{"_index":257,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["bookdto",{"_index":170,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["bookid",{"_index":211,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books",{"_index":182,"title":{},"body":{"controllers/BooksController.html":{}}}],["books.controller",{"_index":310,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":250,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["books/config/config.service",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":179,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["booksmodule",{"_index":35,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":317,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":249,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["book})@apiresponse({status",{"_index":202,"title":{},"body":{"controllers/BooksController.html":{}}}],["bootstrap",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":528,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":526,"title":{},"body":{"modules.html":{}}}],["building",{"_index":475,"title":{},"body":{"index.html":{}}}],["cervantes",{"_index":156,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["cervantes'})@column",{"_index":121,"title":{},"body":{"classes/Book.html":{}}}],["class",{"_index":21,"title":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{},"classes/UpdateBookDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["classes",{"_index":106,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/ConfigService.html":{},"classes/UpdateBookDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":306,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_imports",{"_index":308,"title":{},"body":{"modules/BooksModule.html":{}}}],["cluster_booksmodule_providers",{"_index":307,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["column",{"_index":148,"title":{},"body":{"classes/Book.html":{}}}],["column('text",{"_index":132,"title":{},"body":{"classes/Book.html":{}}}],["configservice",{"_index":46,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env).ensurevalues",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.gettypeormconfig",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor",{"_index":267,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(booksrepository",{"_index":314,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(env",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"coverage.html":{}}}],["controller('books",{"_index":263,"title":{},"body":{"controllers/BooksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["coverage",{"_index":421,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":201,"title":{},"body":{"controllers/BooksController.html":{}}}],["crear",{"_index":195,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook",{"_index":184,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["createbook(newbook",{"_index":318,"title":{},"body":{"injectables/BooksService.html":{}}}],["createbook(request",{"_index":190,"title":{},"body":{"controllers/BooksController.html":{}}}],["data",{"_index":275,"title":{},"body":{"controllers/BooksController.html":{}}}],["data['affected",{"_index":293,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{}}}],["date.now",{"_index":274,"title":{},"body":{"controllers/BooksController.html":{}}}],["datos",{"_index":199,"title":{},"body":{"controllers/BooksController.html":{}}}],["dd",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":120,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["debug",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["debug.log",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["default",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["del",{"_index":125,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["delete",{"_index":245,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid",{"_index":291,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid')@apioperation({summary",{"_index":212,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebook",{"_index":185,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebook(bookid",{"_index":320,"title":{},"body":{"injectables/BooksService.html":{}}}],["deletebook(request",{"_index":210,"title":{},"body":{"controllers/BooksController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":110,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["development",{"_index":487,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":227,"title":{},"body":{"controllers/BooksController.html":{}}}],["dirname",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["dist/**/*.entity.js",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{}}}],["documentation",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["don",{"_index":128,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["dto/books.dto",{"_index":252,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["duration",{"_index":305,"title":{},"body":{"controllers/BooksController.html":{}}}],["e2e",{"_index":498,"title":{},"body":{"index.html":{}}}],["edición",{"_index":124,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["efficient",{"_index":476,"title":{},"body":{"index.html":{}}}],["elapsedtime",{"_index":298,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminado",{"_index":216,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminar",{"_index":213,"title":{},"body":{"controllers/BooksController.html":{}}}],["ensurevalues",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{}}}],["ensurevalues(keys",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{}}}],["entity",{"_index":147,"title":{},"body":{"classes/Book.html":{}}}],["env",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["error(`config",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.log",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["específico",{"_index":283,"title":{},"body":{"controllers/BooksController.html":{}}}],["específico'})@apiresponse({status",{"_index":214,"title":{},"body":{"controllers/BooksController.html":{}}}],["esta",{"_index":123,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["example",{"_index":153,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["exports",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":251,"title":{},"body":{"controllers/BooksController.html":{},"dependencies.html":{}}}],["extends",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["filename",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["findall",{"_index":186,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findall(@req",{"_index":273,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall(params",{"_index":322,"title":{},"body":{"injectables/BooksService.html":{}}}],["findall(request",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{}}}],["findbook",{"_index":187,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findbook(bookid",{"_index":325,"title":{},"body":{"injectables/BooksService.html":{}}}],["findbook(request",{"_index":225,"title":{},"body":{"controllers/BooksController.html":{}}}],["finishtime",{"_index":297,"title":{},"body":{"controllers/BooksController.html":{}}}],["forbidden",{"_index":204,"title":{},"body":{"controllers/BooksController.html":{}}}],["format",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":287,"title":{},"body":{"controllers/BooksController.html":{}}}],["framework",{"_index":474,"title":{},"body":{"index.html":{}}}],["function",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":468,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genre",{"_index":111,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{}}}],["get(':bookid",{"_index":282,"title":{},"body":{"controllers/BooksController.html":{}}}],["get(':bookid')@apioperation({summary",{"_index":226,"title":{},"body":{"controllers/BooksController.html":{}}}],["get()@apioperation({summary",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":470,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{}}}],["grow",{"_index":505,"title":{},"body":{"index.html":{}}}],["hello",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":516,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["hidalgo",{"_index":127,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["host",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{}}}],["httpexception",{"_index":329,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://nestjs.com",{"_index":522,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":261,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpstatus.created",{"_index":288,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.ok",{"_index":272,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.unauthorized",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":112,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/UpdateBookDto.html":{}}}],["identifier",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":113,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["info.log",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["información",{"_index":228,"title":{},"body":{"controllers/BooksController.html":{}}}],["ingenioso",{"_index":126,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["inject",{"_index":247,"title":{},"body":{"controllers/BooksController.html":{}}}],["inject(winston_module_provider",{"_index":269,"title":{},"body":{"controllers/BooksController.html":{}}}],["injectable",{"_index":83,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":330,"title":{},"body":{"injectables/BooksService.html":{}}}],["injectrepository(book",{"_index":331,"title":{},"body":{"injectables/BooksService.html":{}}}],["installation",{"_index":483,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":485,"title":{},"body":{"index.html":{}}}],["join",{"_index":512,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":92,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":519,"title":{},"body":{"index.html":{}}}],["key",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{}}}],["la",{"_index":130,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["level",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{}}}],["libro",{"_index":200,"title":{},"body":{"controllers/BooksController.html":{}}}],["libro'})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros'})@apiresponse({status",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{}}}],["license",{"_index":525,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":502,"title":{},"body":{"index.html":{}}}],["lista",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{}}}],["literal",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{}}}],["log/debug",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["log/error",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["log/info",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":260,"title":{},"body":{"controllers/BooksController.html":{}}}],["mancha",{"_index":131,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["mancha'})@column",{"_index":145,"title":{},"body":{"classes/Book.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":280,"title":{},"body":{"controllers/BooksController.html":{}}}],["metadata",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":300,"title":{},"body":{"controllers/BooksController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["miguel",{"_index":119,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["miscellaneous",{"_index":467,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":501,"title":{},"body":{"index.html":{}}}],["mm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":491,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":515,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":520,"title":{},"body":{"index.html":{}}}],["name",{"_index":207,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":524,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":152,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["new",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbook",{"_index":192,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["node.js",{"_index":473,"title":{},"body":{"index.html":{}}}],["novela",{"_index":155,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["novela'})@column",{"_index":134,"title":{},"body":{"classes/Book.html":{}}}],["npm",{"_index":484,"title":{},"body":{"index.html":{}}}],["number",{"_index":136,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/UpdateBookDto.html":{}}}],["object.assign(toupdate",{"_index":340,"title":{},"body":{"injectables/BooksService.html":{}}}],["obtener",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{}}}],["ok",{"_index":281,"title":{},"body":{"controllers/BooksController.html":{}}}],["open",{"_index":503,"title":{},"body":{"index.html":{}}}],["optional",{"_index":208,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["overview",{"_index":529,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":438,"title":{"dependencies.html":{}},"body":{}}],["pages",{"_index":114,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{}}}],["param",{"_index":241,"title":{},"body":{"controllers/BooksController.html":{}}}],["param('bookid",{"_index":284,"title":{},"body":{"controllers/BooksController.html":{}}}],["parameters",{"_index":206,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["params",{"_index":324,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(bookid",{"_index":336,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(this.getvalue('tutorial_port",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{}}}],["passport",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(__dirname",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":513,"title":{},"body":{"index.html":{}}}],["port",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":243,"title":{},"body":{"controllers/BooksController.html":{}}}],["post()@apioperation({summary",{"_index":194,"title":{},"body":{"controllers/BooksController.html":{}}}],["prefix",{"_index":181,"title":{},"body":{"controllers/BooksController.html":{}}}],["primarygeneratedcolumn",{"_index":149,"title":{},"body":{"classes/Book.html":{}}}],["private",{"_index":268,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["production",{"_index":493,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":472,"title":{},"body":{"index.html":{}}}],["project",{"_index":504,"title":{},"body":{"index.html":{}}}],["promise",{"_index":209,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["properties",{"_index":108,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{}}}],["property",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["public",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{}}}],["publisher",{"_index":115,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{}}}],["put",{"_index":246,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid",{"_index":295,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid')@apioperation({summary",{"_index":232,"title":{},"body":{"controllers/BooksController.html":{}}}],["quijote",{"_index":129,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["read",{"_index":514,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/UpdateBookDto.html":{}}}],["redoc",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":315,"title":{},"body":{"injectables/BooksService.html":{},"index.html":{}}}],["req",{"_index":242,"title":{},"body":{"controllers/BooksController.html":{}}}],["request",{"_index":191,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['method",{"_index":301,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['url",{"_index":303,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['user'].username",{"_index":304,"title":{},"body":{"controllers/BooksController.html":{}}}],["require('dotenv').config",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{}}}],["res",{"_index":193,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.created).json",{"_index":290,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":279,"title":{},"body":{"controllers/BooksController.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["rimraf",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":488,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["santillana",{"_index":157,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["santillana'})@column",{"_index":143,"title":{},"body":{"classes/Book.html":{}}}],["scalable",{"_index":477,"title":{},"body":{"index.html":{}}}],["secret",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":478,"title":{},"body":{"index.html":{}}}],["session",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":479,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":229,"title":{},"body":{"controllers/BooksController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["specified",{"_index":286,"title":{},"body":{"controllers/BooksController.html":{}}}],["sponsors",{"_index":507,"title":{},"body":{"index.html":{}}}],["src/.../config.service.ts",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["src/books/book.entity.ts",{"_index":107,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/books/book.entity.ts:12",{"_index":146,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:16",{"_index":135,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:22",{"_index":133,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:26",{"_index":122,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:30",{"_index":144,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:34",{"_index":142,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:38",{"_index":140,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.entity.ts:8",{"_index":138,"title":{},"body":{"classes/Book.html":{}}}],["src/books/book.ts",{"_index":161,"title":{},"body":{"classes/Book-1.html":{},"coverage.html":{}}}],["src/books/book.ts:10",{"_index":164,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:14",{"_index":163,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:17",{"_index":162,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:19",{"_index":168,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:22",{"_index":167,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:25",{"_index":166,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:5",{"_index":165,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/book.ts:7",{"_index":169,"title":{},"body":{"classes/Book-1.html":{}}}],["src/books/books.controller.ts",{"_index":180,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:116",{"_index":217,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:145",{"_index":235,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:167",{"_index":238,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:46",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:65",{"_index":230,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:94",{"_index":205,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.module.ts",{"_index":309,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":313,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:15",{"_index":323,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:19",{"_index":326,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:23",{"_index":319,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:27",{"_index":321,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:31",{"_index":328,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:9",{"_index":316,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/config/config.service.ts",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/books/config/config.service.ts:17",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/books/config/config.service.ts:22",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/books/config/config.service.ts:5",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/books/config/config.service.ts:8",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/books/dto/books.dto.ts",{"_index":171,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/books/dto/books.dto.ts:13",{"_index":173,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/books.dto.ts:16",{"_index":172,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/books.dto.ts:19",{"_index":177,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/books.dto.ts:22",{"_index":176,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/books.dto.ts:25",{"_index":175,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/books.dto.ts:5",{"_index":178,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/books.dto.ts:8",{"_index":174,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/dto/updatebook.dto.ts",{"_index":412,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/books/dto/updatebook.dto.ts:2",{"_index":416,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:3",{"_index":420,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:4",{"_index":415,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:5",{"_index":414,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:6",{"_index":413,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:7",{"_index":419,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:8",{"_index":418,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/dto/updatebook.dto.ts:9",{"_index":417,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/main.ts",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utilities/auth.module.ts",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/utilities/jwt.strategy.ts",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/utilities/jwt.strategy.ts:14",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utilities/jwt.strategy.ts:6",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["stack",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":489,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":492,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":494,"title":{},"body":{"index.html":{}}}],["started",{"_index":471,"title":{"index.html":{}},"body":{}}],["starter",{"_index":482,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":239,"title":{},"body":{"controllers/BooksController.html":{}}}],["statements",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":271,"title":{},"body":{"controllers/BooksController.html":{}}}],["statuscode",{"_index":237,"title":{},"body":{"controllers/BooksController.html":{}}}],["stay",{"_index":517,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/UpdateBookDto.html":{}}}],["summary",{"_index":270,"title":{},"body":{"controllers/BooksController.html":{}}}],["super",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":508,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":527,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":497,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":500,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":499,"title":{},"body":{"index.html":{}}}],["tests",{"_index":496,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":506,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.booksrepository.delete",{"_index":335,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":332,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone",{"_index":333,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone(bookid",{"_index":338,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(newbook",{"_index":334,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(updated",{"_index":341,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.createbook(newbook",{"_index":289,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebook(bookid",{"_index":292,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall(request.query",{"_index":277,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findbook(bookid",{"_index":285,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebook(bookid",{"_index":296,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.env[key",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_database",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_host",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_password",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_user",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.log",{"_index":299,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.writelog(starttime",{"_index":278,"title":{},"body":{"controllers/BooksController.html":{}}}],["throw",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["throwonmissing",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{}}}],["title",{"_index":116,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"classes/UpdateBookDto.html":{}}}],["token",{"_index":266,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":518,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":337,"title":{},"body":{"injectables/BooksService.html":{}}}],["transports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["tutorial_database",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_host",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_password",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_port",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_user",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":523,"title":{},"body":{"index.html":{}}}],["type",{"_index":117,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["typeorm",{"_index":150,"title":{},"body":{"classes/Book.html":{},"injectables/BooksService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([book]),authmodule",{"_index":312,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forroot",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{}}}],["typescript",{"_index":481,"title":{},"body":{"index.html":{}}}],["ui",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":196,"title":{},"body":{"controllers/BooksController.html":{}}}],["undefined",{"_index":198,"title":{},"body":{"controllers/BooksController.html":{},"classes/ConfigService.html":{}}}],["unit",{"_index":495,"title":{},"body":{"index.html":{}}}],["updatebook",{"_index":188,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebook(bookid",{"_index":327,"title":{},"body":{"injectables/BooksService.html":{}}}],["updatebook(request",{"_index":231,"title":{},"body":{"controllers/BooksController.html":{}}}],["updatebookdto",{"_index":411,"title":{"classes/UpdateBookDto.html":{}},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updated",{"_index":339,"title":{},"body":{"injectables/BooksService.html":{}}}],["url",{"_index":302,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards",{"_index":248,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards(authguard('jwt",{"_index":264,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{}}}],["username",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{}}}],["utilities/auth.module",{"_index":311,"title":{},"body":{"modules/BooksModule.html":{}}}],["validate",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":533,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":240,"title":{},"body":{"controllers/BooksController.html":{}}}],["watch",{"_index":490,"title":{},"body":{"index.html":{}}}],["website",{"_index":521,"title":{},"body":{"index.html":{}}}],["winston",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["winston.format.combine",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.errors",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.json",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.splat",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.timestamp",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":259,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["writelog",{"_index":189,"title":{},"body":{"controllers/BooksController.html":{}}}],["writelog(starttime",{"_index":236,"title":{},"body":{"controllers/BooksController.html":{}}}],["www.imagen.com/quijote.png",{"_index":159,"title":{},"body":{"classes/Book.html":{},"classes/Book-1.html":{},"classes/BookDto.html":{}}}],["www.imagen.com/quijote.png'})@column",{"_index":139,"title":{},"body":{"classes/Book.html":{}}}],["you'd",{"_index":511,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BooksModule } from './books/books.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { configService } from './books/config/config.service';\nimport { WinstonModule } from 'nest-winston'; \nimport * as winston from 'winston';\nimport * as path from 'path';\n\n//\n@Module({\n  imports: [\n    BooksModule, \n    TypeOrmModule.forRoot( \n      configService.getTypeOrmConfig(),\n    ), WinstonModule.forRoot({\n      level: 'info', \n      format: winston.format.combine( \n        winston.format.timestamp({\n          format: 'YYYY-MM-DD HH:mm:ss',\n        }),\n        winston.format.errors({ stack: true }),\n        winston.format.splat(),\n        winston.format.json(),\n      ),\n      transports: [ \n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/debug/'),\n          filename: 'debug.log',\n          level: 'debug',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/error/'),\n          filename: 'error.log',\n          level: 'error',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/info/'),\n          filename: 'info.log',\n          level: 'info',\n        }),\n        new winston.transports.Console({ level: 'debug' }),\n      ],\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n  imports: [\n    PassportModule.register({ \n      defaultStrategy: 'jwt', \n      property: 'user', \n      session: false,\n    }),\n  ],\n  controllers: [],\n  providers: [JwtStrategy], \n  exports: [PassportModule], \n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 99})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Book {\n  @ApiProperty({ example: 99 })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  @Column()\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  @Column()\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  @Column('text')\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  @Column()\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  @Column()\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  @Column()\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  @Column()\n  image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book-1.html":{"url":"classes/Book-1.html","title":"class - Book-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class Book {\n  @ApiProperty({ example: 99 })\n  id: number;\n  @ApiProperty({ example: 'Don Quijote de la Mancha' }) \n  title: string;\n  \n  @ApiProperty({ example: 'Novela' })\n  genre: string;\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  author: string;\n  @ApiProperty({ example: 'Santillana' })\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/dto/Books.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/dto/Books.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; \n\nexport class BookDto {\n  @ApiProperty({ example: 'Don Quijote de la Mancha' }) \n  readonly title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  readonly genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  readonly author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  readonly publisher: string;\n\n  @ApiProperty({ example: 592 })\n  readonly pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  readonly image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                            \n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBook(request: Request, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear un libro'})@ApiResponse({status: undefined, description: 'Datos del libro creado', type: Book})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')@ApiOperation({summary: 'Eliminar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro eliminado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtener lista de libros'})@ApiResponse({status: undefined, description: 'Lista de libros', type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')@ApiOperation({summary: 'Devuelve información sobre un libro específico'})@ApiResponse({status: undefined, description: 'Datos del libro', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(request: Request, bookId: string, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')@ApiOperation({summary: 'Actualizar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro actualizado', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeLog\n                        \n                    \n                \n            \n            \n                \nwriteLog(startTime: any, request: any, statusCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.controller.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Req,\n  Post,\n  Body,\n  Delete,\n  Put,\n  Inject,\n  UseGuards,\n  Res,\n} from '@nestjs/common';\nimport { BooksService } from './books.service';\nimport { Request } from 'express';\nimport { BookDto } from './dto/Books.dto';\nimport {\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Book } from './book.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { HttpStatus } from '@nestjs/common'; \n@ApiTags('book')\n@Controller('books')\n//@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class BooksController {\n  constructor(\n    private booksService: BooksService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n\n  @Get() \n  @ApiOperation({ summary: 'Obtener lista de libros' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Lista de libros',\n    type: [Book],\n  })\n  async findAll(@Req() request: Request, @Res() res): Promise {\n    let startTime = Date.now();\n    let data = await this.booksService.findAll(request.query);\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: 'OK',\n      data: data,\n    });\n  }\n\n  @Get(':bookId') \n  @ApiOperation({ summary: 'Devuelve información sobre un libro específico' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Datos del libro',\n    type: Book,\n  })\n  async findBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.findBook(bookId);\n\n    if (!data) {\n      message = 'A book with the specified id was not found';\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  @Post() \n  @ApiOperation({ summary: 'Crear un libro' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Datos del libro creado',\n    type: Book,\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async createBook(\n    @Req() request: Request,\n    @Body() newBook: BookDto,\n    @Res() res,\n  ): Promise {\n    let startTime = Date.now();\n    let data = await this.booksService.createBook(newBook);\n\n    this.writeLog(startTime, request, HttpStatus.CREATED);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      message: 'OK',\n      data: data,\n    });\n  }\n\n  @Delete(':bookId') \n  @ApiOperation({ summary: 'Eliminar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro eliminado',\n  })\n  async deleteBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.deleteBook(bookId);\n\n    if (data['affected'] == 0) {\n      message = 'A book with the specified id was not found';\n      data = {};\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  @Put(':bookId') \n  @ApiOperation({ summary: 'Actualizar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro actualizado',\n    type: Book,\n  })\n  async updateBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Body() newBook: BookDto,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.updateBook(bookId, newBook);\n\n    if (!data) {\n      message = 'A book with the specified id was not found';\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  writeLog(startTime: any, request: any, statusCode: number) {\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n\n    this.logger.log({\n      level: 'info',\n      message: '',\n      statusCode: statusCode,\n      method: request['method'],\n      url: request['url'],\n      //user: request['user'].username,\n      duration: elapsedTime,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\ncluster_BooksModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Book } from './book.entity';\nimport { BooksService } from './books.service';\nimport { BooksController } from './books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from '../utilities/auth.module';\n@Module({\n  imports: [TypeOrmModule.forFeature([Book]),AuthModule], \n  providers: [BooksService], \n  controllers: [BooksController], \n})\nexport class BooksModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBook\n                        \n                    \n                \n            \n            \n                \ncreateBook(newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(bookId: string, newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { BookDto } from './dto/Books.dto';\nimport { Book } from './book.entity';\nimport { InjectRepository } from '@nestjs/typeorm'; \nimport { Repository } from 'typeorm'; \n\n\n@Injectable()\nexport class BooksService {\n\n  constructor(\n    @InjectRepository(Book) private booksRepository: Repository, \n  ) {}\n\n  async findAll(params): Promise { \n    return await this.booksRepository.find(); \n  }\n\n  async findBook(bookId: string): Promise {\n    return await this.booksRepository.findOne({ where: { id: bookId } }); \n  }\n\n  createBook(newBook: BookDto): Promise {\n    return this.booksRepository.save(newBook);\n  }\n\n  async deleteBook(bookId: string): Promise {\n    return await this.booksRepository.delete({ id: parseInt(bookId) });\n  }\n\n  async updateBook(bookId: string, newBook: BookDto): Promise { \n    let toUpdate = await this.booksRepository.findOne(bookId); \n\n    let updated = Object.assign(toUpdate, newBook); \n\n    return this.booksRepository.save(updated); \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/books/config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ensureValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/books/config/config.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getTypeOrmConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypeOrmConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/books/config/config.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in src/books/config/config.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm'; \n\nrequire('dotenv').config();\n\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) {}\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions { \n    return {\n      type: 'mysql', \n\n      host: this.getValue('TUTORIAL_HOST'), \n      port: parseInt(this.getValue('TUTORIAL_PORT')),\n      username: this.getValue('TUTORIAL_USER'),\n      password: this.getValue('TUTORIAL_PASSWORD'),\n      database: this.getValue('TUTORIAL_DATABASE'),\n\n      entities: ['dist/**/*.entity.js'], \n      synchronize: true, \n    };\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n]);\n\nexport { configService };\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utilities/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) { \n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(), \n      secretOrKey: 'secret', \n    });\n  }\n\n  async validate(payload: any): Promise { \n    if (!payload) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return payload;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/dto/UpdateBook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/dto/UpdateBook.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateBookDto {\n    readonly id: number; \n    readonly title: string;\n    readonly genre: string;\n    readonly description: string;\n    readonly author: string;\n    readonly publisher: string;\n    readonly pages: number;\n    readonly image_url: string;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/books/book.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/books/config/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books/dto/Books.dto.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/dto/UpdateBook.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            mysql : ^2.18.1\n        \n            nest-winston : ^1.6.2\n        \n            nestjs-redoc : ^1.3.1\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n        \n            winston : ^3.3.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (src/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/books/config/config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
